buildscript {

    repositories {
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    dependencies {
        classpath 'com.github.triplet.gradle:play-publisher:2.2.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}
plugins {
    id 'com.android.application'
    id 'com.github.triplet.play' version '2.2.1'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'jacoco-android'
}

def version = "2.8.1"
def GOOGLE_PLACE_API_KEY = System.getenv('GOOGLE_PLACE_API_KEY') ?: "YOUR_API_KEY"

android {
    compileSdkVersion 28

    def travisBuildNumber = System.getenv("TRAVIS_BUILD_NUMBER")
    def buildNumber = (travisBuildNumber) ? (travisBuildNumber as int) : 1

    def applicationVersion = version
    def travisTag = System.getenv("TRAVIS_TAG")
    def buildVersionName = (travisTag) ? travisTag : applicationVersion + "-debug." + buildNumber

    defaultConfig {
        applicationId "org.openmrs.mobile"
        versionName buildVersionName
        versionCode buildNumber
        multiDexEnabled true

        minSdkVersion 16
        targetSdkVersion 28

        testApplicationId "org.openmrs.mobile.test"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        manifestPlaceholders = [
            GOOGLE_PLACE_API_KEY : GOOGLE_PLACE_API_KEY
        ]
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    signingConfigs {
        release {
            storeFile rootProject.file('release.keystore')
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEYSTORE_ALIAS_NAME")
            keyPassword System.getenv("KEYSTORE_ALIAS_PASS")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def relativeRootDir = new File("${project.rootDir.absolutePath}/openmrs-client/release/")
                    variant.packageApplicationProvider.get().outputDirectory = relativeRootDir

                    // directly assign the new name back to outputFileName
                    def apkFileName = "openmrs-client-debug.apk"
                    output.outputFileName = apkFileName
                }
            }
        }
        debug {
            testCoverageEnabled true
        }
    }

    lintOptions {
        warning 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }

    viewBinding {
        enabled = true
    }
}

repositories {
    maven { url 'http://yanzm.github.io/MaterialTabHost/repository' }
    mavenCentral()
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    google()
}

dependencies {
    def support_version = '1.0.0-beta01'
    def room_version = "2.1.0-alpha04"
    def appcompat_version = "1.2.0-alpha01"
    def material_version = "1.2.0-alpha03"

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    androidTestImplementation(
            'junit:junit:4.12',
            'androidx.test.ext:junit:1.1.1',
            'androidx.test.espresso:espresso-core:3.1.0',
            'androidx.test:rules:1.1.0-alpha4',
            'androidx.test:runner:1.1.0-alpha4',
            'org.mockito:mockito-core:2.8.9',
            'com.google.dexmaker:dexmaker-mockito:1.2',
            'com.google.dexmaker:dexmaker:1.2',
            'com.jayway.android.robotium:robotium-solo:4.2',
            'androidx.arch.core:core-testing:2.0.0'
    )
    androidTestImplementation files('libs/the-missing-android-xml-junit-test-runner-release-1.3_2.jar')
    debugImplementation 'com.github.jainsahab:Snooper-Okhttp:1.5.4'
    releaseImplementation 'com.github.jainsahab:Snooper-Okhttp-No-Op:1.5.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.guava:guava:23.0'
    implementation "androidx.appcompat:appcompat:$support_version"
    implementation "androidx.gridlayout:gridlayout:$support_version"
    implementation "androidx.recyclerview:recyclerview:$support_version"
    implementation "androidx.cardview:cardview:$support_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "com.google.android.material:material:$material_version"
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'commons-codec:commons-codec:1.10'
    implementation 'net.zetetic:android-database-sqlcipher:4.1.3@aar'
    implementation 'org.jdeferred:jdeferred-android-aar:1.2.4'
    implementation "androidx.legacy:legacy-support-v13:$support_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation "com.android.support:support-v4:28.0.+"
    implementation 'joda-time:joda-time:2.0'
    implementation 'net.sf.kxml:kxml2:2.3.0'
    implementation 'io.reactivex:rxjava:1.3.4'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.jakewharton.rxbinding:rxbinding:1.0.0'
    implementation 'com.github.hotchemi:permissionsdispatcher:2.3.1'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'
    implementation 'org.adw.library:discrete-seekbar:1.0.1'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    implementation 'com.github.amlcurran.showcaseview:library:5.4.3'
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'com.hbb20:ccp:2.2.7'
    implementation 'com.github.AppIntro:AppIntro:5.1.0'
    testImplementation(
            'org.mockito:mockito-core:2.8.9',
            'org.mockito:mockito-inline:2.13.0',
            'junit:junit:4.12',
            'org.powermock:powermock-api-mockito2:2.0.2',
            'org.powermock:powermock-module-junit4:2.0.2'
    )
    testImplementation 'android.arch.core:core-testing:1.1.1'
    implementation 'android.arch.persistence.room:rxjava2:1.1.1'
    // Room components
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'android.arch.persistence.room:rxjava2:1.1.1'
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation 'android.arch.persistence.room:rxjava2:1.1.1'
    // Swipe reveal layout
    implementation 'com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.1'
    //Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0'
    //google place api
    implementation 'com.google.android.libraries.places:places:2.1.0'
}

play {
    enabled = rootProject.file('google_play.json').exists()

    if (version.contains("alpha")) {
        track = 'alpha'
    } else if (version.contains("beta")) {
        track = 'beta'
    } else {
        track = 'production'
    }

    serviceAccountCredentials = rootProject.file('google_play.json')
    resolutionStrategy = "auto"
    releaseStatus = "completed"

    outputProcessor { // this: ApkVariantOutput
        versionNameOverride = "$versionNameOverride.$versionCode"
    }
}
